name: Image Build and Push
description: This action builds and pushes a Docker image to the GitHub Container Registry unless the image already exists.

inputs:
  gh_username:
    description: GitHub username
    required: true
  gh_token:
    description: GitHub token for authentication
    required: true
  image_name:
    description: Name of the Docker image to build and push
    required: true
  git_ref:
    description: Git ref to check out
    required: true
  pr_number:
    description: Pull request number (if applicable)
    required: false
  context:
    description: Build context for the Dockerfile
    required: true
  dockerfile:
    description: Path to the Dockerfile
    required: true

runs:
  using: composite

  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.git_ref }}

    - name: Set variables
      shell: bash
      run: |
        echo "GH_USERNAME=$(tr '[:upper:]' '[:lower:]' <<< '${{ inputs.gh_username }}')" >> $GITHUB_ENV
        echo "SHA=sha-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "IMAGE_REVISION=$(git rev-parse HEAD)" >> $GITHUB_ENV
        echo "IMAGE_VERSION=${{ inputs.git_ref }}" >> $GITHUB_ENV
        if [[ "${{ inputs.pr_number }}" != '' ]]; then
          git fetch origin ${{ inputs.git_ref }}
          echo "SHA=sha-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "IMAGE_REVISION=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "IMAGE_VERSION=pr-${{ inputs.pr_number }}" >> $GITHUB_ENV
        fi

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ env.GH_USERNAME }}
        password: ${{ inputs.gh_token }}

    - name: Check if image exists in GHCR
      id: check-image
      shell: bash
      run: |
        IMAGE="ghcr.io/${{ env.GH_USERNAME }}/${{ inputs.image_name }}:${{ env.SHA }}"
        if docker manifest inspect "$IMAGE" > /dev/null 2>&1; then
          echo "Image $IMAGE exists in GHCR. Skipping build."
          echo "exists=true" >> $GITHUB_ENV
          exit 0
        else
          echo "Image $IMAGE does NOT exist in GHCR. Proceeding to build."
          echo "exists=false" >> $GITHUB_ENV
        fi

    - name: Prepare Container Metadata tags
      if: env.exists == 'false'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ env.GH_USERNAME }}/${{ inputs.image_name }}
        flavor: |
          latest=true
        tags: |
          type=raw,value=${{ env.IMAGE_VERSION }}
          type=raw,value=${{ env.SHA }}
        labels: |
          org.opencontainers.image.revision=${{ env.IMAGE_REVISION }}
          org.opencontainers.image.version=${{ env.IMAGE_VERSION }}

    - name: Build and Push to Container Registry
      if: env.exists == 'false'
      id: builder
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Inspect Docker Image
      if: env.exists == 'false'
      shell: bash
      run: |
        docker image inspect ghcr.io/${{ env.GH_USERNAME }}/${{ inputs.image_name }}:latest
        docker image inspect ghcr.io/${{ env.GH_USERNAME }}/${{ inputs.image_name }}:${{ env.SHA }}
        docker image inspect ghcr.io/${{ env.GH_USERNAME }}/${{ inputs.image_name }}:${{ env.IMAGE_VERSION }}
