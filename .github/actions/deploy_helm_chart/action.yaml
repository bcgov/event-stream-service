name: Deploy Helm Chart
description: Deploy a Helm chart to a Kubernetes cluster.

inputs:
  chart_path:
    description: Path to the Helm chart directory.
    required: true
  values_file:
    description: Path to the values file to use (optional).
    required: false
  overrides:
    description: Additional Helm values to override (YAML format).
    required: false
  release_name:
    description: Name of the Helm release.
    required: true
  git_ref:
    description: Git reference (branch or commit SHA) to check out.
    required: false
    default: main
  environment:
    description: Deployment environment (dev, test, prod)
    required: true

runs:
  using: composite
  steps:
    - name: Install OpenShift CLI tools
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: "4.14"
        helm: "3.12.0"

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.git_ref }}

    - name: Debug environment variables
      shell: bash
      run: |
        echo "ENVIRONMENT: ${{ inputs.environment }}"
        echo "NAMESPACE: $NAMESPACE"
        echo "OPENSHIFT_SERVER: $OPENSHIFT_SERVER"
        if [ -n "$OPENSHIFT_TOKEN" ]; then
          echo "OPENSHIFT_TOKEN is set and length is ${#OPENSHIFT_TOKEN}"
        else
          echo "OPENSHIFT_TOKEN is NOT set"
        fi

    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.NAMESPACE }}

    - name: Deploy Helm Chart
      shell: bash
      run: |
        if [ -n "${{ inputs.values_file }}" ]; then
          echo "Running: helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} -n $NAMESPACE -f ${{ inputs.chart_path }}/values.yaml -f ${{ inputs.values_file }} --set ${{ inputs.overrides }}"
          helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} \
            -n $NAMESPACE \
            -f ${{ inputs.chart_path }}/values.yaml \
            -f ${{ inputs.values_file }} \
            --set ${{ inputs.overrides }}
        else
          echo "Running: helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} -n $NAMESPACE -f ${{ inputs.chart_path }}/values.yaml --set ${{ inputs.overrides }}"
          helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} \
            -n $NAMESPACE \
            -f ${{ inputs.chart_path }}/values.yaml \
            --set ${{ inputs.overrides }}
        fi
