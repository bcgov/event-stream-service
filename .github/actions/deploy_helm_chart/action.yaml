name: Deploy Helm Chart
description: Deploy a Helm chart to a Kubernetes cluster.

inputs:
  chart_path:
    description: Path to the Helm chart directory.
    required: true
  values_file:
    description: Path to the values file to use (optional).
    required: false
    default: ""
  overrides:
    description: Additional Helm values to override (YAML format).
    required: false
    default: ""
  release_name:
    description: Name of the Helm release.
    required: true
  git_ref:
    description: Git reference (branch or commit SHA) to check out.
    required: false
    default: main
  deploy_env:
    description: Deployment environment (dev, test, prod)
    required: true
  openshift_server:
    description: OpenShift server URL
    required: true
  openshift_token:
    description: OpenShift authentication token
    required: true
  openshift_namespace:
    description: OpenShift namespace to deploy to
    required: true

runs:
  using: composite
  steps:
    - name: Install OpenShift CLI tools
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: "4.14"
        helm: "3.15"

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.git_ref }}

    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ inputs.openshift_server }}
        openshift_token: ${{ inputs.openshift_token }}
        insecure_skip_tls_verify: true
        namespace: ${{ inputs.openshift_namespace }}
    
    - name: Debug Inputs
      shell: bash
      run: |
        echo "Chart Path: ${{ inputs.chart_path }}"
        echo "Values File: ${{ inputs.values_file }}"
        echo "Overrides: ${{ inputs.overrides }}"
        echo "Release Name: ${{ inputs.release_name }}"
        echo "Git Ref: ${{ inputs.git_ref }}"
        echo "Deploy Env: ${{ inputs.deploy_env }}"
        echo "OpenShift Server: ${{ inputs.openshift_server }}"
        echo "OpenShift Namespace: ${{ inputs.openshift_namespace }}"

    - name: Deploy Helm Chart
      shell: bash
      run: |
        if [ -n "${{ inputs.values_file }}" ]; then
          if [ -n "${{ inputs.overrides }}" ]; then
            echo "Running: helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} -n ${{ inputs.openshift_namespace }} -f ${{ inputs.chart_path }}/values.yaml -f ${{ inputs.values_file }} --set ${{ inputs.overrides }}"
            helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} \
              -n ${{ inputs.openshift_namespace }} \
              -f ${{ inputs.chart_path }}/values.yaml \
              -f ${{ inputs.values_file }} \
              --set "${{ inputs.overrides }}"
          else
            echo "Running: helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} -n ${{ inputs.openshift_namespace }} -f ${{ inputs.chart_path }}/values.yaml -f ${{ inputs.values_file }}"
            helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} \
              -n ${{ inputs.openshift_namespace }} \
              -f ${{ inputs.chart_path }}/values.yaml \
              -f ${{ inputs.values_file }}
          fi
        else
          if [ -n "${{ inputs.overrides }}" ]; then
            echo "Running: helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} -n ${{ inputs.openshift_namespace }} -f ${{ inputs.chart_path }}/values.yaml --set ${{ inputs.overrides }}"
            helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} \
              -n ${{ inputs.openshift_namespace }} \
              -f ${{ inputs.chart_path }}/values.yaml \
              --set "${{ inputs.overrides }}"
          else
            echo "Running: helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} -n ${{ inputs.openshift_namespace }} -f ${{ inputs.chart_path }}/values.yaml"
            helm upgrade --install ${{ inputs.release_name }} ${{ inputs.chart_path }} \
              -n ${{ inputs.openshift_namespace }} \
              -f ${{ inputs.chart_path }}/values.yaml
          fi
        fi
